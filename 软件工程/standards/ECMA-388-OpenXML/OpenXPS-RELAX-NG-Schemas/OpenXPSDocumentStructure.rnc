default namespace =
  "http://schemas.openxps.org/oxps/v1.0/documentstructure"
namespace ds = "http://schemas.openxps.org/oxps/v1.0/documentstructure"
namespace xs = "http://www.w3.org/2001/XMLSchema"

ds_CT_DocumentStructure = ds_DocumentStructure.Outline?, ds_Story*
ds_CT_CP_Outline = ds_DocumentOutline
ds_CT_DocumentOutline = ds_AG_DocumentOutline, ds_OutlineEntry+
ds_CT_OutlineEntry = ds_AG_OutlineEntry
ds_CT_Story = ds_AG_Story, ds_StoryFragmentReference+
ds_CT_StoryFragmentReference = ds_AG_StoryFragmentReference
ds_ST_Name =
  xsd:string {
    pattern =
      "(\p{Lu}|\p{Ll}|\p{Lo}|\p{Lt}|\p{Nl})(\p{Lu}|\p{Ll}|\p{Lo}|\p{Lt}|\p{Nl}|\p{Mn}|\p{Mc}|\p{Nd}|\p{Lm}|_)*"
  }
ds_ST_NameUnique =
  xsd:ID {
    pattern =
      "(\p{Lu}|\p{Ll}|\p{Lo}|\p{Lt}|\p{Nl})(\p{Lu}|\p{Ll}|\p{Lo}|\p{Lt}|\p{Nl}|\p{Mn}|\p{Mc}|\p{Nd}|\p{Lm}|_)*"
  }
ds_ST_IntGEOne = xsd:int { minInclusive = "1" }
ds_DocumentStructure =
  element DocumentStructure { ds_CT_DocumentStructure }
ds_DocumentStructure.Outline =
  element DocumentStructure.Outline { ds_CT_CP_Outline }
ds_DocumentOutline = element DocumentOutline { ds_CT_DocumentOutline }
ds_OutlineEntry = element OutlineEntry { ds_CT_OutlineEntry }
ds_Story = element Story { ds_CT_Story }
ds_StoryFragmentReference =
  element StoryFragmentReference { ds_CT_StoryFragmentReference }
ds_AG_DocumentOutline = xml_lang
ds_AG_OutlineEntry =
  
  ## default value: 1
  attribute OutlineLevel { ds_ST_IntGEOne }?,
  attribute OutlineTarget { xsd:anyURI },
  attribute Description { xsd:string },
  xml_lang?
ds_AG_Story = attribute StoryName { xsd:string }
ds_AG_StoryFragmentReference =
  attribute FragmentName { xsd:string }?,
  attribute Page { ds_ST_IntGEOne }
ds_CT_StoryFragments = ds_StoryFragment+
ds_CT_StoryFragment =
  ds_AG_StoryFragment,
  ds_StoryBreak?,
  (ds_SectionStructure
   | ds_ParagraphStructure
   | ds_ListStructure
   | ds_TableStructure
   | ds_FigureStructure)+,
  ds_StoryBreak?
ds_CT_Break = empty
ds_CT_Section =
  (ds_ParagraphStructure
   | ds_ListStructure
   | ds_TableStructure
   | ds_FigureStructure)+
ds_CT_Paragraph = (ds_NamedElement)*
ds_CT_Table = (ds_TableRowGroupStructure)+
ds_CT_TableRowGroup = (ds_TableRowStructure)+
ds_CT_TableRow = (ds_TableCellStructure)+
ds_CT_TableCell =
  ds_AG_TableCell,
  (ds_ParagraphStructure
   | ds_ListStructure
   | ds_TableStructure
   | ds_FigureStructure)*
ds_CT_List = (ds_ListItemStructure)+
ds_CT_ListItem =
  ds_AG_ListItem,
  (ds_ParagraphStructure
   | ds_ListStructure
   | ds_TableStructure
   | ds_FigureStructure)*
ds_CT_Figure = (ds_NamedElement)*
ds_CT_NamedElement = ds_AG_NamedElement
ds_ST_FragmentType = "Content" | "Header" | "Footer"
ds_ST_TableSpan = xsd:int { minInclusive = "1" }
ds_StoryFragments = element StoryFragments { ds_CT_StoryFragments }
ds_StoryFragment = element StoryFragment { ds_CT_StoryFragment }
ds_StoryBreak = element StoryBreak { ds_CT_Break }
ds_SectionStructure = element SectionStructure { ds_CT_Section }
ds_ParagraphStructure = element ParagraphStructure { ds_CT_Paragraph }
ds_TableStructure = element TableStructure { ds_CT_Table }
ds_TableRowGroupStructure =
  element TableRowGroupStructure { ds_CT_TableRowGroup }
ds_TableRowStructure = element TableRowStructure { ds_CT_TableRow }
ds_TableCellStructure = element TableCellStructure { ds_CT_TableCell }
ds_ListStructure = element ListStructure { ds_CT_List }
ds_ListItemStructure = element ListItemStructure { ds_CT_ListItem }
ds_FigureStructure = element FigureStructure { ds_CT_Figure }
ds_NamedElement = element NamedElement { ds_CT_NamedElement }
ds_AG_StoryFragment =
  attribute StoryName { xsd:string }?,
  attribute FragmentName { xsd:string }?,
  attribute FragmentType { ds_ST_FragmentType }
ds_AG_TableCell =
  
  ## default value: 1
  attribute RowSpan { ds_ST_TableSpan }?,
  
  ## default value: 1
  attribute ColumnSpan { ds_ST_TableSpan }?
ds_AG_ListItem = attribute Marker { ds_ST_NameUnique }?
ds_AG_NamedElement = attribute NameReference { ds_ST_Name }
